version: "3.8"

services:
  postgres:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: hctm_surgery
      POSTGRES_DB: hctm_surgery
      POSTGRES_PASSWORD: vEf6sk98f2bcukaPD4nXCraSXstt2zvnWpeomg8LIH0t0t8LJZ
    ports:
      - "54321:5432"
    volumes:
      - db_data_pgsql:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U hctm_surgery" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    restart: always
    ports:
      - "63791:63791"
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - redis_data:/data

  backend:
    build:
      context: ./backend_surgery_fastapi
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    restart: always
    volumes:
      - backend_uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started

  celery_worker:
    build:
      context: ./backend_surgery_fastapi
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - backend
      - redis
    command: celery -A utils.celery worker --loglevel=info

  celery_beat:
    build:
      context: ./backend_surgery_fastapi
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - backend
      - redis
    command: celery -A utils.celery beat --loglevel=info

  frontend:
    build:
      context: ./frontend_surgery
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    restart: always

volumes:
  db_data_pgsql:
  backend_uploads:
  redis_data:
